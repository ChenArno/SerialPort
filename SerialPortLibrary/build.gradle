apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
//        externalNativeBuild {
//            cmake {
//                arguments '-DANDROID_TOOLCHAIN=clang'
//            }
//        }
//
//        ndk{
//            moduleName "SerialPort"
//            abiFilters "armeabi","armeabi-v7a","x86"
//        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//        }
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:25.4.0'
    testImplementation 'junit:junit:4.12'
}


//================jar打包====================
def SDK_BASENAME = "vanzSerialPort";
def sdkDestinationPath = "build";//生成jar存放目录
def releaseJar = file('build/intermediates/packaged-classes/release/classes.jar')
//打包debug目录下的classes.jar
def debugJar = file('build/intermediates/packaged-classes/debug/classes.jar')

task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + ".jar" //sdk是你自己jar包的名字，随便命名
}

task makeJar(type: Jar) {
    from zipTree(releaseJar)//从哪里打包class文件
    exclude('**/BuildConfig.class')//排除不必要的class文件
    baseName = SDK_BASENAME
    destinationDir = file(sdkDestinationPath)
}

makeJar.dependsOn(deleteBuild, build)

//运行脚本
//1.命令行方式：在Terminal输入gradlew makeJar
//2.图形界面方式：Gradle   :ModuleName Tasks   other   markJar